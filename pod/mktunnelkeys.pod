=head1 NAME

mktunnelkeys - authentication key generation for on-the-fly SSH tunnels

=head1 SYNOPSIS

  mktunnelkeys [ -q ] [-n <REMOTE-NETCAT>] [ -t (rsa|dsa) ] \
               key-name remote-address remote-port

=head1 DESCRIPTION

B<mktunnelkeys> generates SSH authentication keys needed for an on-demand
tunnel, which are set up using L<mktunneld (1)>. When run as root, the
keys are stored in F<~tunnel/.ssh> under the given C<key-name>, otherwise
keys are stored in the current user's F<.ssh> directory.

When the tunnel is built L<netcat (1)> is started on the remote, connecting
to C<remote-address> on C<remote-port>. That means that even C<localhost>
is a valid value for C<remote-address>, which might sound a bit confusing
at first.

Unless the C<-q> option was given, the user is told how to install the
public on the remote system.

=head1 OPTIONS

=over

=item -q

Be quiet.

=item -n <REMOTE-NETCAT>

Path to the netcat program on the remote host. Without this setting
C<mktunnelkeys> assumes the same path for the C<netcat> program on the
local and the remote host. First it checks for C<netcat> in the path of
the local environment; if that fails C<nc> is searched for, and if that is
not found C</usr/bin/netcat> is chosen. If the C<-n> option is specified,
a fully qualified path to the netcat program should be given. This is
written in the public key file, that is generated by C<mktunnelkeys>.

=item -t (rsa|dsa)

Specifies the type of key to create. The possible values are C<rsa> or C<dsa>.

=back

=head1 EXAMPLES

To access the L<smbd (8)>, that runs on a remote system on C<127.0.0.2>,
issue

  mktunnelkeys -t dsa samba_tunnel 127.0.0.2 139

and follow the instructions.

=head1 SEE ALSO

L<mktunneld (8)>

